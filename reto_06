import unittest
import Geometria as g

class TestGeometria(unittest.TestCase):

  @classmethod
  def setUpClass(cls):
    print('setUpClass() - OK')

  @classmethod
  def tearDownClass(cls):
    print('tearDownClass() - OK')

  def setUp(self):
    print('setUp - OK')
    self.r = []
    self.a = [1, 2, 3, 4, 5, 6, 7, 8]
    self.b = [8, 7, 6, 5, 4, 3, 2, 1]

  def test_areaCuadrado(self):
    result = [g.areaCuadrado(n) for n in self.a]
    self.assertEqual(result,[1, 4, 9, 16, 25, 36, 49, 64])

  def test_areaCirculo(self):
    result = [g.areaCirculo(n) for n in self.a]
    self.assertEqual(result,[3.1416, 12.5664, 28.2744, 50.2656, 78.540, 113.0976, 153.9384, 201.0624])
  
  def test_areaTriangulo(self):
    for valor_a, valor_b in zip(self.a, self.b):
      self.r.append(g.areaTriangulo(valor_a,valor_b))
    self.assertEqual(self.r,[4, 7, 9, 10, 10, 9, 7, 4])

  def test_areaRectangulo(self):
    for valor_a, valor_b in zip(self.a, self.b):
      self.r.append(g.areaRectangulo(valor_a,valor_b))
    self.assertEqual(self.r,[8, 14, 18, 20, 20, 18, 14, 8])

  def test_areaPentagono(self):
    for valor_a, valor_b in zip(self.a, self.b):
      self.r.append(g.areaPentagono(valor_a,valor_b))
    self.assertEqual(self.r,[4, 7, 9, 10, 10, 9, 7, 4])

  def test_areaRombo(self):
    for valor_a, valor_b in zip(self.a, self.b):
      self.r.append(g.areaRombo(valor_a,valor_b))
    self.assertEqual(self.r,[4, 7, 9, 10, 10, 9, 7, 4])

  def test_areaRomboide(self):
    for valor_a, valor_b in zip(self.a, self.b):
      self.r.append(g.areaRomboide(valor_a,valor_b))
    self.assertEqual(self.r,[8, 14, 18, 20, 20, 18, 14, 8])

  def test_areaTrapecio(self):
    for valor_a, valor_b, valor_c in zip(self.a, self.a, self.b):
      self.r.append(g.areaTrapecio(valor_a,valor_b,valor_c))
    self.assertEqual(self.r,[4, 14, 27, 40, 50, 54, 49, 32])

  def test_set_figuraName(self):
    g.set_figuraName(n) for n in self.a:
      case = g.figuraName
      r.append(case) 
    self.assertEqual(r,["Cuadrado","Circulo", "Tiangulo", "Rectangulo", "Pentagono","Rombo", "Romboide", "Trapecio"])

  def tearDown(self):
    print('tearDown - OK')
    del self.a
    del self.b
    del self.r

if __name__ == '__main__':
  unittest.main()
